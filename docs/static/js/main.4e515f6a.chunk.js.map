{"version":3,"sources":["components/AddCategoria.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGrid.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGrid","GifExpertApp","categorias","setCategorias","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAe,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,cAC3B,EAAqCC,mBAAS,IAA9C,mBAAQC,EAAR,KAAoBC,EAApB,KAiBA,OACI,uBAAMC,SAZW,SAACC,GACpBA,EAAEC,iBAGEJ,EAAWK,OAAOC,OAAO,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAMd,UACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SApBiB,SAACP,GACtBF,EAAcE,EAAEQ,OAAOF,UAqBnB,kD,+BC5BCG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACZC,EADY,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAQF,GAFR,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAYZM,GAZY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,MAAQV,EAAS,EAATA,IAEjC,OACI,sBAAKc,UAAU,yCAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAOzB,ECR2B,SAAEA,GAC3B,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAfAC,qBAAW,WACVxB,EAASC,GAAWwB,MAAO,SAAAC,GACvBC,YAAa,WACTJ,EAAS,CACLf,KAAKkB,EACLL,SAAQ,MAEd,UAML,CAACpB,IAEIqB,EDbwBM,CAAa3B,GAAjCa,EAAb,EAAON,KAAea,EAAtB,EAAsBA,QAGnB,OACI,qCACA,oBAAIJ,UAAU,wBAAd,SAAuChB,IACtCoB,GAAW,wCAEZ,qBAAKJ,UAAY,WAAjB,SAISH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEGfiB,EAzBM,WAErB,MAAoC1C,mBAAU,CAAC,cAA/C,mBAAO2C,EAAP,KAAmBC,EAAnB,KAQA,OACI,qCACA,8CACA,cAAC,EAAD,CAAe7C,cAAkB6C,IACjC,uBAEA,6BACMD,EAAWpB,KAAI,SAAAoB,GAAU,OAC3B,cAAC,EAAD,CAA4B7B,SAAY6B,GAAxBA,Y,MCjBxBE,IAASC,OAIL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.4e515f6a.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategoria = ({ setCategories }  ) => {\r\n    const  [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange =(e)=>{\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n     \r\n      //setcategorieshace un callback por l o  que puede ver el estado anterior\r\n      if (inputValue.trim().length>1) {\r\n        setCategories(cats => [inputValue, ...cats ]);\r\n        setInputValue('');\r\n      }\r\n      \r\n    };\r\n\r\n    return (\r\n        <form onSubmit = {handleSubmit}>            \r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            ></input>\r\n            <h2>AddCategoria</h2>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategoria.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","export const getGifs = async(category)=> {\r\n    const  url= `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=kZllKK4nDA2Lf6u3CQUQ4h6qdlDPVBkH`;\r\n    const resp = await fetch ( url );\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id:img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        };\r\n    });\r\n   \r\n    return gifs;\r\n    \r\n};\r\n\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({title , url}) => {\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGrid } from '../hooks/useFetchGrid';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n //const [images, setimages] = useState([])\r\n// useEffect ( () => {\r\n//     getGifs ( category ).then(imgs => setimages(imgs));\r\n//    },[ category ]);\r\n\r\n const {data: images , loading} = useFetchGrid(category);\r\n  // otra forma ---- images.map(image => <li key={image.id}>{image.title}</li>)\r\n  \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__bounceInDown\">{category}</h3>\r\n        {loading && <p>Loading</p> }\r\n\r\n        <div className = \"cardGrid\">\r\n            \r\n            \r\n                {\r\n                 images.map(img => (\r\n                     <GifGridItem \r\n                     key={img.id} \r\n                     {...img}/>\r\n                    )) \r\n                }            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGrid = ( category ) => {\r\n   const [state, setState] = useState({\r\n       data: [],\r\n       loading: true\r\n   });\r\n\r\n   useEffect (()=> {\r\n    getGifs( category ).then ( imgs => {\r\n        setTimeout ( () => {\r\n            setState({\r\n                data:imgs,\r\n                loading:false\r\n            });\r\n        },3000\r\n\r\n        );\r\n        \r\n\r\n    }) \r\n   },[category]);\r\n\r\n   return state; //{data:[], loading: true}\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategoria } from './components/AddCategoria';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n//const categorias = ['One Punch','Samuray X', 'Sailor Moon'];\r\nconst [categorias, setCategorias] = useState (['One Punch']);\r\n\r\n//const handleAdd = () => {\r\n //   setCategorias( cats => [...categorias, ' primera prueba ']);\r\n   \r\n//};\r\n\r\n\r\nreturn(\r\n    <>\r\n    <h2>GifExpertApp</h2>\r\n    <AddCategoria  setCategories = { setCategorias }/>\r\n    <hr></hr>\r\n    \r\n    <ol>\r\n        { categorias.map(categorias => \r\n        <GifGrid key = {categorias} category = {categorias}/> ) }\r\n    </ol>\r\n    </>\r\n);\r\n\r\n};\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n   \n  \n\n    <GifExpertApp />,\n \n  document.getElementById('root')\n);\n"],"sourceRoot":""}